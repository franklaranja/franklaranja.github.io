@use 'fonts';
@use 'rgb_palette';

@mixin neon-glow {
  transition: text-shadow 0.3s ease;
  animation-timing-function: ease-in-out;
  animation: glow 1s infinite;
  @keyframes glow {
    0% {
      text-shadow: 0 0 var(--s-3) rgba(var(--blue-500) / 0.6);
    }
    25% {
      text-shadow: 0 0 var(--s-2) rgba(var(--blue-500) / 0.9);
    }
    50% {
      text-shadow: 0 0 var(--s-1) rgba(var(--blue-500) / 1.0);
    }
    75% {
      text-shadow: 0 0 var(--s-2) rgba(var(--blue-500) / 0.9);
    }
    100% {
      text-shadow: 0 0 var(--s-3) rgba(var(--blue-500) / 0.6);
    }
  }
}


@mixin stack($space) {
    display: flex;
    flex-direction: column;
    justify-content: flex-start;

    & > * {
      margin-block: 0;
    }

    & > * + * {
      margin-block-start: $space;
    }
}

@mixin center($gutter, $maxsize: var(--max-width)) {
  box-sizing: content-box;
  max-inline-size: $maxsize; 
  margin-inline: auto; 
  padding-inline-start: $gutter; 
    .struct-name {
    .struct-name {
    .struct-name {
    .struct-name {
      font-size: var(--s1);
    }
      font-size: var(--s1);
    }
      font-size: var(--s1);
    }
      font-size: var(--s1);
    }
  padding-inline-end: $gutter; 
}

@mixin center-text-too($gutter, $maxsize: var(--max-width)) {
  box-sizing: content-box;
  max-inline-size: $maxsize;
  text-align: center;
  margin-inline: auto; 
  padding-inline-start: $gutter; 
  padding-inline-end: $gutter; 
}

@mixin link-button($background, $shadow) {
  font-family: var(--interface-font);
  font-size: var(--s0);
  display: block;
  background-color: rgba($background / 0.5);
  color: rgb(var(--link-color));
  transition: background-color 0.3s;
  padding: var(--s-5) var(--s-2);
  border: 1px solid;
  border-radius: var(--s-2);
  text-shadow: 2px 0 var(--s-2) rgba($shadow / 0.7);
  font-weight: 700;
}

@mixin box($padding, $border, $light, $dark) {
  padding: $padding;
  border: $border solid; 
  outline: $border transparent;
  outline-offset: calc($border * -1); 
  color: $dark;
  background-color: $light;

  & * {
    color: inherit; 
  }
}

@mixin grid($gutter: 1rem, $min: 20ch) {
  display: grid; 
  grid-gap: $gutter; 
  grid-template-columns: repeat(auto-fit, minmax(min($min, 100%), 1fr));
}

@mixin cluster($space: 1rem, $justify: flex-start, $align: flex-start) {
  display: flex; 
  flex-wrap: wrap; 
  gap: $space; 
  justify-content: $justify; 
  align-items: $align; 
}

:root {
    font-size: calc(1rem + 0.5vw);
    --ratio: 1.5;
    --s-6: calc(var(--s-5) / var(--ratio)); 
    --s-5: calc(var(--s-4) / var(--ratio)); 
    --s-4: calc(var(--s-3) / var(--ratio)); 
    --s-3: calc(var(--s-2) / var(--ratio)); 
    --s-2: calc(var(--s-1) / var(--ratio)); 
    --s-1: calc(var(--s0) / var(--ratio)); 
    --s0: 1rem; 
    --s1: calc(var(--s0) * var(--ratio)); 
    --s2: calc(var(--s1) * var(--ratio)); 
    --s3: calc(var(--s2) * var(--ratio)); 
    --s4: calc(var(--s3) * var(--ratio)); 
    --s5: calc(var(--s4) * var(--ratio));
    --s6: calc(var(--s5) * var(--ratio));

    --max-width: 70ch; /* between 45-75 */

    --interface-font: Orbitron, sans-serif;
    --monospace-font: FiraCode, monospace;
    --main-font: CrimsonPro, serif;
    --heading-font: Julee, sans-serif;
    --indent: var(--s0);

    --background-color: var(--blue-900);
    /* --background-color: 0 0 0; */
    --text-color: var(--orange-50);
    --link-color: var(--blue-400);
    --visited-color: var(--blue-100);
    --error-color: #ff7070;

}

.neon {
  @include neon-glow;
}

.badge {
  font-family: var(--interface-font);
  font-size: var(--s-1);
  color: rgb(var(--blue-900));
  background: rgb(var(--green-600));
  border: 1px solid rgb(var(--green-900));
  transition: background-color 0.3s;
  padding: var(--s-5) var(--s-2);
  border-radius: var(--s-2);
  font-weight: 700;
  @include neon-glow;
}

.stack {
  display: flow-root;
  p {
    margin-bottom: var(--s1);
  }
}

.w5 {  max-width: 5%; }
.w10 {  max-width: 10%; }
.w15 {  max-width: 15%; }
.w20 {  max-width: 20%; }
.w25 {  max-width: 25%; }
.w30 {  max-width: 30%; }
.w35 {  max-width: 35%; }
.w40 {  max-width: 40%; }
.w45 {  max-width: 45%; }
.w50 {  max-width: 50%; }
.w55 {  max-width: 55%; }
.w60 {  max-width: 60%; }
.w65 {  max-width: 65%; }
.w70 {  max-width: 70%; }
.w75 {  max-width: 75%; }
.w80 {  max-width: 80%; }
.w85 {  max-width: 85%; }
.w90 {  max-width: 90%; }
.w95 {  max-width: 95%; }
.w100 {  max-width: 100%; }

@layer reset {
  *,
  *::before,
  *::after {
      box-sizing: border-box;
      margin: 0;
      padding: 0;
  }

  html {
    -webkit-text-size-adjust: 100%;
    -moz-text-size-adjust: 120%;
    -ms-text-size-adjust: 100%;
    text-size-adjust: 100%;
    scroll-behavior: smooth;
    font-size: 16px;
    /* font-size: 16px !important; */
  }

  body {
    font-family: var(--main-font);
    font-size: var(--s0);
    /* font-size: var(--s0) !important; */
    line-height: 1.7;
    accent-color: rgb(var(--green-400));
    background-color: rgb(var(--background-color));
    color: rgb(var(--text-color));
    @include stack(var(--s2));
    @include center(var(--s-6));
    margin-bottom: var(--s1);
  }

  p, h1, h2, h3, h4, h5, h6 {
    margin-block: 0;
  }

  h1, h2, h3, h4, h5, h6 {
    font-family: var(--heading-font);
    color: rgb(var(--orange-100));
    /* margin-bottom: var(--s0); */
    letter-spacing: var(--s-5);
  }

  h1 {
    font-size: var(--s2);
    color: rgb(var(--orange-500));
    text-align: center;
    letter-spacing: var(--s-4);
  }

  h2 {
    font-size: var(--s1);
    color: rgb(var(--orange-400));
    letter-spacing: var(--s-4);
  }

  h3 {
    color: rgb(var(--orange-400));
  }

  h4 {
    color: rgb(var(--orange-300));
  }

  h5 {
    color: rgb(var(--orange-300));
  }

  b, strong {
    color: rgb(var(--orange-300));
  }

  a {
    color: inherit;
    text-decoration: none;

    &:link {
      color: rgb(var(--link-color));
    }

    &:visited {
      color: rgb(var(--visited-color));
    }
  }

  code {
    font-family: var(--monospace-font);
    color: rgb(var(--green-300));
  }

  pre {
    font-family: var(--monospace-font);
    margin-left: var(--indent);
    padding-left: var(--s-2);
    border-left: 1px solid rgb(var(--blue-500));
    line-height: 1.4;
    font-size: calc(var(--s0) * 0.95);
  }

  ol, ul, li {
    margin-left: var(--indent);
  }

  blockquote {
    color: rgb(var(--orange-100));
    margin-left: var(--indent);
    margin-right: var(--indent);
    padding-left: var(--s-2);
    border-left: 1px solid rgb(var(--orange-500));
  }

  input,
  button,
  textarea {
    font: inherit,
  }

  button, [type="button"], [type="submit"], [type="reset"] {
      cursor: pointer;
  }

  img {
      max-width: 100%;
      height: auto;
      display: block;
  }

  aside {
    position: relative;
    width: 30%;
    float: right;
    @include box(var(--s2), 1px, rgb(var(--orange-900)), rgb(var(--orange-600)));
    @include stack(var(--s-1));
    border-radius: var(--s-1);
    color: rgb(var(--orange-100));
    font-size: var(--s-1);
    margin-left: var(--s2);
    margin-right: var(--indent);
    margin-bottom: var(--s3);
    padding: var(--s0);
    border-color: rgb(var(--orange-800));
    box-shadow: 0 0 var(--s-1) rgb(var(--orange-200));

    h1 {
      font-size: var(--s0);
      color: rgb(var(--orange-500));
      text-align: left;
    }
  }
}

@layer header {
  header {
    position: relative;
    width: 100%;
  }

  .hero {
      position: relative;
      width: 100%;
      max-width: var(--max-width);
      margin: 0 auto;
      padding: var(--s1);
  }

  .hero img {
      width: 100%;
      max-width: var(--max-width);
      display: block;
      border-radius: var(--s-1);
  }

  .menu {
      position: absolute;
      top: var(--s2);
      left: var(--s3);
      @include stack(var(--s-1));
  }

  .nav-button {
    @include link-button(var(--blue-900), var(--green-400));

    &:visited {
        color: rgb(var(--blue-400));
        font-weight: 600;
      }

    &:hover,
    &:visited.selected,
    &:link.selected {
        color: rgb(var(--blue-200));
        border-color: rgb(var(--blue-400));
        /* background-color: rgba(var(--blue-700) / 0.7); */
        box-shadow: 0 0 var(--s-2) rgb(var(--blue-400));
      }
  }


  .site-title {
      font-family: var(--heading-font);
      font-weight: 300;
      position: absolute;
      top: var(--s1);
      right: var(--s2);
      color: rgb(var(--orange-200));
      font-size: var(--s2);
      text-shadow: 0 0 var(--s-5) rgba(var(--blue-900) / 0.7);
      letter-spacing: var(--s-6);

      a, a:link, a:visited {
        color: rgb(var(--orange-400));
      }
  }
}

@layer main {
  main {
    margin-left: var(--s2);
    margin-right: var(--s2);
  }

  main > section {
    @include stack(var(--s2));
    display: flow-root;
  }
}

@layer footer {
  footer {
    color: rgb(var(--orange-400));
    @include stack(var(--s-3) );
    @include center-text-too(var(--s2));
    font-family: var(--interface-font);
    letter-spacing: var(--s-5);
    font-size: var(--s-1);
    max-width: 80%;

    h3 {
      margin-top: calc(-1 * var(--s-2));
      font-size: var(--s0);

      a, a:link, a:visited {
        color: rgb(var(--orange-300));
      }
    }

    a, a:link, a:visited {
      color: rgb(var(--blue-400));
      width: 100%;
    }

    /* ul { */
    /*   list-style: none; */
    /*   display: grid; */
    /*   gap: var(--s0); */
    /*   grid-template-columns: repeat(4, var(--s4)); */
    /*   align-content: center; */
    /**/
    /*   li { */
    /*     width: 100%; */
    /*   } */
    /*  */
    /* } */

      img {
        opacity: 70%;
        align-self: center;
      }
  
  }

}

@layer code {
  .crate-grid {
    @include grid(var(--s3), 280px);
    max-width: var(--max-width);
  }

  .crate-image {
    width: auto;
    height: 120px;
  }

  .crate-meta {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: var(--s-2);
  }

  .crate-icon {
    @include center(var(--s4));
    width: 40%;
  }

  .crate-links {
    @include cluster(var(--s1), center, center);

    a {
      @include link-button(var(--blue-700), var(--green-400));
      font-family: var(--interface-font); // Orbitron for link
      font-size: var(--s-1);

      &:link {
        color: rgb(var(--blue-400));
      }

      &:visited {
        color: rgb(var(--blue-300));
      }

      &:hover {
        color: rgb(var(--blue-300));
        @include neon-glow;
      }
    }

  }
}

@layer homepage {
  .news-carousel {
    position: relative;
    width: 100%;
    max-width: 600px;
    margin: 20px auto;
    height: calc(14 * var(--s1));
    /* height: auto; */
    overflow: hidden;
  }

  .card {
    position: relative;
    @include box(var(--s2), 1px, rgb(var(--blue-900)), rgb(var(--blue-700)));
    @include stack(var(--s-1));
    box-shadow: 0 0 10px rgb(var(--blue-700));
    border-radius: var(--s-1);
    text-align: center;
    align-items: center;

    h2 {
      font-family: var(--interface-font);
      font-size: var(--s1);
      color: rgb(var(--orange-400));
      @include neon-glow;
    }

    p {
      font-family: var(--main-font);
      font-size: var(--s-1);
      color: rgb(var(--orange-100));
    }

    a {
      @include link-button(var(--blue-700), var(--green-400));
      font-family: var(--interface-font); // Orbitron for link
      font-size: var(--s-1);

      &:link {
        color: rgb(var(--blue-400));
      }

      &:visited {
        color: rgb(var(--blue-300));
      }

      &:hover {
        color: rgb(var(--blue-300));
        @include neon-glow;
      }

      &::after {
        content: '';
        position: absolute;
        inset: 0;
      }
    }
  }

  .news-item {
    position: absolute;
    width: 80%;
    margin: var(--s2);
    padding: var(--s1);
    opacity: 0;
    transform: translateX(-1500px); 
    animation-timing-function: ease-in-out;
  }

  @keyframes item1 {
    0% {
      opacity: 0;
      transform: translateX(-1500px); 
    }
    4% {
      opacity: 1;
      transform: translateX(0); 
    }
    16% {
      opacity: 1;
      transform: translateX(0); 
    }

    20% {
      opacity: 0;
      transform: translateX(3000px); 
    }
    100% {
      opacity: 0;
      transform: translateX(3000px); 
    }
  }

  @keyframes item2 {
    0% {
      opacity: 0;
      transform: translateX(-1500px); 
    }
    20% {
      opacity: 0;
      transform: translateX(-1500px); 
    }
    24% {
      opacity: 1;
      transform: translateX(0); 
    }
    36% {
      opacity: 1;
      transform: translateX(0); 
    }
    40% {
      opacity: 0;
      transform: translateX(3000px); 
    }

    100% {
      opacity: 0;
      transform: translateX(3000px); 
    }
  }

  @keyframes item3 {
    0% {
      opacity: 0;
      transform: translateX(-1500px); 
    }
    40% {
      opacity: 0;
      transform: translateX(-1500px); 
    }
    44% {
      opacity: 1;
      transform: translateX(0); 
    }
    56% {
      opacity: 1;
      transform: translateX(0); 
    }
    60% {
      opacity: 0;
      transform: translateX(3000px); 
    }

    100% {
      opacity: 0;
      transform: translateX(3000px); 
    }
  }


  @keyframes item4 {
    0% {
      opacity: 0;
      transform: translateX(-1500px); 
    }
    60% {
      opacity: 0;
      transform: translateX(-1500px); 
    }
    64% {
      opacity: 1;
      transform: translateX(0); 
    }
    76% {
      opacity: 1;
      transform: translateX(0); 
    }
    80% {
      opacity: 0;
      transform: translateX(3000px); 
    }

    100% {
      opacity: 0;
      transform: translateX(3000px); 
    }
  }

  @keyframes item5 {
    0% {
      opacity: 0;
      transform: translateX(-1500px); 
    }
    80% {
      opacity: 0;
      transform: translateX(-1500px); 
    }
    84% {
      opacity: 1;
      transform: translateX(0); 
    }
    96% {
      opacity: 1;
      transform: translateX(0); 
    }
    100% {
      opacity: 0;
      transform: translateX(3000px); 
    }
  }

  .news-item:nth-child(1) { animation: item1 35s infinite; }
  .news-item:nth-child(2) { animation: item2 35s infinite; }
  .news-item:nth-child(3) { animation: item3 35s infinite; }
  .news-item:nth-child(4) { animation: item4 35s infinite; }
  .news-item:nth-child(5) { animation: item5 35s infinite; }
}

@layer reference {
  a.citation {
      font-family: var(--interface-font);
      color: rgb(var(--purple-300));
      text-decoration: none;
  }

  a.citation:hover {
      text-decoration: underline;
      color: rgb(var(--purple-200));
  }

  .reference {
      margin-bottom: var(--s0);
      position: relative;
  }

  .ref-authors {
      font-weight: bold;
      color: rgb(var(--purple-200));
  }

  .ref-year {
      color: rgb(var(--orange-300));
  }

  .ref-title {
      font-style: italic;
  }

  .ref-link {
      font-family: var(--interface-font);
      color: rgb(var(--blue-400));
      text-decoration: none;
  }

  .ref-link:hover {
      text-decoration: underline;
      color: rgb(var(--blue-300));
  }
}

@layer form {

  #contactform {
    @include stack(var(--s-1));

    .form-group {
      @include stack(var(--s-2));
      margin-bottom: var(--s-1);

      label {
        font-family: var(--interface-font);
        color: rgb(var(--purple-200));
      }

      input, textarea {
        font-family: var(--main-font);
        color: rgb(var(--text-color));
        background: rgb(var(--purple-900));
        border: 1px solid rgb(var(--purple-400));
        padding: 10px;
        border-radius: 4px;
        box-shadow: 0 0 5px rgb(var(--purple-200));
        transition: border-color 0.3s, box-shadow 0.3s;

        &:focus {
          border-color: rgb(var(--blue-400));
          background: rgb(var(--blue-900));
          box-shadow: 0 0 10px rgb(var(--blue-200));
          outline: none;
        }
        
        &:user-invalid {
          border-color: var(--error-color);
        }
      }

      textarea {
        resize: vertical;
        min-height: 100px;
      }

      .error-message {
        font-family: var(--interface-font);
        font-size: var(--s-1);
        color: var(--error-color);

        &:empty {
          display: none;
        }
      }
    }

    .cta-button {
      @include link-button(var(--blue-700), var(--green-400));
      cursor: pointer;
      transition: background 0.3s, transform 0.3s;

      &:hover {
        color: rgb(var(--blue-200));
        @include neon-glow;
        transform: translateY(-2px);
      }
    }
  }

  .form-message {
    font-family: var(--interface-font);
    color: rgb(var(--text-color));
    font-size: var(--s-1);
    text-align: center;
    margin-top: 15px;
    padding: 10px;
    border-radius: 4px;
    /* opacity: 0; */
    transition: opacity 0.3s ease-in-out;

    &.success {
      color: rgb(var(--green-300));
      opacity: 1;
    }

    &.error {
      color: var(--error-color);
      opacity: 1;
    }
  }

}

@layer diagram {
  .diagram {
    max-width: max-content;
  }
  .struct, .enum {
    position: relative;
    @include stack(var(--s-1));
    border-radius: var(--s-1);
  }
  

  .struct {
    @include box(var(--s0), 1px, rgb(var(--orange-700)), rgb(var(--orange-300)));
    box-shadow: 0 0 10px rgb(var(--orange-300));

    &:not(:has(ul)) {
      margin: 0;
      padding: var(--s-3);
      background-color: rgb(var(--orange-800));

      .struct-name, .enum-name {
        font-size: var(--s0);
      }
    }

    .struct-name, .enum-name {
      font-family: var(--heading-font);
      font-size: var(--s1);
      font-weight: 700;
      align-self: center;
    }

    .struct-name {
      color: rgb(var(--orange-300))
    }

    .enum-name {
      color: rgb(var(--green-300))
    }
  }

  .enum {
    @include box(var(--s0), 1px, rgb(var(--green-700)), rgb(var(--green-300)));
    box-shadow: 0 0 10px rgb(var(--green-300));
  }
  
  .tuple {
    display: flex;
    gap: 10px;
    flex-wrap: wrap;
    @include box(var(--s-2), 1px, rgb(var(--purple-700)), rgb(var(--purple-300)));
    box-shadow: 0 0 10px rgb(var(--purple-300));
    border-radius: var(--s-1);
  
    li {
        flex: 1;
    }
  }




  .field-name, .variant-name {
    font-family: var(--interface-font);
    font-weight: 700;
  }

  .fields, .variants, .tuple {
    list-style: none;
    margin: 0;
  }

  .fields li, .variants li {
    margin: 0;
    margin-top: var(--s-1);
  }
  
  .vec-field {
      border-left: var(--s-3) solid rgb(var(--green-200));
      padding-left: var(--s-1);
      
      > .field-name::after {
        content: ' (vec)';
      }
  }
  
  .option-field {
      border-left: var(--s-3) solid rgb(var(--orange-200));
      padding-left: var(--s-1);
      
      > .field-name::after {
        content: ' (option)';
      }
  }
  
  .generic-field {
      border-left: var(--s-3) solid rgb(var(--blue-200));
      padding-left: var(--s-1);
      
      > .field-name::after {
        content: ' (generic)';
      }
  }
  
  .trait-object-field {
      border-left: var(--s-3) solid rgb(var(--purple-200));
      padding-left: var(--s-1);
      
      > .field-name::after {
        content: ' (trait object)';
      }
  }
}

.float-image {
  float: left;
  border-radius: var(--s-2);
  margin-left: var(--s0);
  margin-bottom: var(--s0);
  margin-top: var(--s-2);
  margin-right: var(--s1);
}

img.photo {
  border-radius: var(--s-2);
  margin-left: var(--indent);
  margin-bottom: var(--s2);
  margin-right: var(--indent);
}

/* =======================*/
/* Responsive adjustments */
/* =======================*/

@media (max-width: 50em) {
  html {
    font-size: 16px !important;
  }

    .hero {
        max-width: 100%; /* Full width on smaller screens */
        padding: var(--s0);
    }

    main {
        padding: 0 var(--s1);
    }

    .site-title {
        font-size: var(--s0);
        top: var(--s0);
        right: var(--s1);
    }

    .menu {
        /* gap: var(--s-1); */
        top: var(--s1);
        left: var(--s2);
    }

    .nav-button {
        font-size: var(--s-1);
    }

    aside {
      width: 100%;
      float: initial;
      margin: var(--s1) var(--s1);
    }
}
