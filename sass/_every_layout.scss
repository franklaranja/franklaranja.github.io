@mixin stack($space) {
    display: flex;
    flex-direction: column;
    justify-content: flex-start;

    & > * {
      margin-block: 0; 
    }

    & > * + * {
      margin-block-start: $space; 
    }
}

@mixin box($padding, $border, $light, $dark) {
  padding: $padding;
  border: $border solid; 
  outline: $border transparent;
  outline-offset: calc($border * -1); 
  color: $dark;
  background-color: $light;

  & * {
    color: inherit; 
  }

  &.invert { 
    color: $light; 
    background-color: $dark; 
  }
}

@mixin center($gutter, $maxsize: var(--measure)) {
  box-sizing: content-box;
  max-inline-size: $maxsize; 
  margin-inline: auto; 
  padding-inline-start: $gutter; 
  padding-inline-end: $gutter; 
}


@mixin center-text-too($gutter, $maxsize: var(--measure)) {
  box-sizing: content-box;
  max-inline-size: $maxsize;
  text-align: center;
  margin-inline: auto; 
  padding-inline-start: $gutter; 
  padding-inline-end: $gutter; 
}

@mixin cluster($space: 1rem, $justify: flex-start, $align: flex-start) {
  display: flex; 
  flex-wrap: wrap; 
  gap: $space; 
  justify-content: $justify; 
  align-items: $align; 
}

@mixin with-sidebar($gutter, $width: 20rem) {
  display: flex;
  flex-wrap: wrap;
  gap: $gutter; 

  & > :first-child {
    flex-basis: width; 
    flex-grow: 1; 
  }

  & > :last-child {
    flex-basis: 0; 
    flex-grow: 999; 
    min-inline-size: 50%; 
  }
}

@mixin switcher($gutter, $treshold: var(--measure), $limit: 4) {
  display: flex;
  flex-wrap: wrap;
  gap: $gutter; 
 
  & > * {
    flex-grow: 1; 
    flex-basis: calc(($treshold - 100%) * 999);
  }

  & > :nth-last-child(n+calc($limit + 1)),
  & > :nth-last-child(n+calc($limit + 1)) ~ * {
    flex-basis: 100%;
  }
}

@mixin cover($space, $min_height: 100vh) {  
  --space: var(--s1); 
  display: flex;
  flex-direction: column;
  min-block-size: $min_height; 
  padding: $space; 

  & > * {
    margin-block: $space;
  }

  & > :first-child:not(h1) {
    margin-block-start: 0; 
  }

  & > :last-child:not(h1) {
    margin-block-end: 0;
  }
  
  & > h1 {
    margin-block: auto;
  }
}

@mixin grid($gutter: 1rem, $min: 20ch) {
  display: grid; 
  grid-gap: $gutter; 
  grid-template-columns: repeat(auto-fit, minmax(min($min, 100%), 1fr));
}


@mixin frame($n: 16, $d: 9) {
  --n: 16; /* numerator */  --d: 9; /* denominator */
  aspect-ratio: $n / $d; 
  overflow: hidden; 
  display: flex; 
  justify-content: center; 
  align-items: center; 

  & > img,
  & > video {
    inline-size: 100%; 
    block-size: 100%; 
    object-fit: cover;
  }
}

/* to do: reel */

@mixin imposter($positioning: absolute, $margin: 0px) {
  position: $positioning;
  inset-block-start: 50%;
  inset-inline-start: 50%; 
  transform: translate(-50%, -50%); 

  &.contain {
    overflow: auto; 
    max-inline-size: calc(100% - ($margin * 2)); 
    max-block-size: calc(100% - ($margin * 2));
  }
}
